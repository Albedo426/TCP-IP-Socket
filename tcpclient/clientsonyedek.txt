using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;
using System.Net;
using System.Net.Sockets;
using System.Threading;

namespace tcpclient
{
    public partial class Form1 : Form
    {
        static Socket dinleyiciSoket = new Socket
              (AddressFamily.InterNetwork, SocketType.Stream, ProtocolType.Tcp);
        static Socket soket = new Socket
              (AddressFamily.InterNetwork, SocketType.Stream, ProtocolType.Tcp);
        //sohey oluþuruyorum  protokolüm tcp 
        //ýP Adresi için InterNetwork baglantýsý üzerinde çalýþacaðýmýzý söylüyoruz
        public Form1()
        {
            InitializeComponent();
            CheckForIllegalCrossThreadCalls = false;
           
          
        }
        private byte[] crativepacket(int com)
        {
            int maxleng = massegebox.Text.Length + clientname.Text.Length +5;
            int dataleng = massegebox.Text.Length+ clientname.Text.Length+1;
           byte[] bytes = new byte[maxleng];
            //0=>komut
            //1=>boþ
            //2=>topuzunluk
            //3+n=>data 
            //3+n1=>bölük//ad ile mesajý ayýrmak için
            //4+n+m=>komut 
            bytes[0] = Convert.ToByte(com);
            bytes[1] = 2;
            bytes[2] = Convert.ToByte(maxleng ); 
            String strdata = clientname.Text + ":"+ massegebox.Text;
            getmessage.Text += clientname.Text + ":" + massegebox.Text+ " \n"; 

            for (int i = 0; i < dataleng; i++)//data=>bayta atýyoruz
                bytes[i + 3] = (byte)strdata[i];
        

            int top = 0;
            for (int i = 0; i < dataleng+ 3; i++)//toplamý buluyoruz
            {
                top += bytes[i];
            }
            bytes[maxleng -1] = Convert.ToByte(top % 127);//toplamý byta atýyoruz

            return bytes;

        }
        private void button1_Click(object sender, EventArgs e)
        {
            //soketim baðlýysa iþlem yapýcam öncelikle kontrol ediyorum
            if (soket.Connected)
            {
                string gonder = massegebox.Text;
                // Að üzerinden gönderilecek her þey bytelara dönüþtürülmüþ olmalýdýr.
                //crc güvenliði ve paket olarak aktarým olucak burda
                soket.Send(crativepacket(1));
               // MessageBox.Show("mesaj  gönderildi");
            }
            else {
                MessageBox.Show("baðlantý hatasý");
            }

        }

        private void clientconnent(object sender, EventArgs e)
        {
            try
            {
                soket.Connect(new IPEndPoint(IPAddress.Parse(clientip.Text), Convert.ToInt16(clientport.Text)));//127.0.0.1 ip adresinden bizim belirlediðimiz porta  baðlanýyoruz
               MessageBox.Show("baðlantý tamamlandý");
            }
            catch (Exception ex)
            {
                MessageBox.Show("baðlantý sýrasýnda bi hata oluþtur tekrar deneyin hata ex=>" + ex);
            }
        }
        public void connentnetwork()
        {
            //thareda baðlý þekilde düzenlenicek tamamý nedeni from gelmeden önce baðlantý  baðlanmalý be mesaj gönderilmeli öbür türlü form gelmiyor 
            // Ayrýca gönderici ile ayný PORT üzerinden dinlemesi gerekiyor  baþka türlü çalýþmýyor
            TcpListener dinle = new TcpListener(IPAddress.Parse(serverip.Text), Convert.ToInt16(serverport.Text));
            //herhangi bir ip adresinden belli bir portu dinlesin diye yapýyoruz
            dinle.Start();
            // Buradan aþaðýsý baðlantý teklifi geldiðinde çalýþacaktýr. 
            dinleyiciSoket = dinle.AcceptSocket();
            while (true)
            {
                try
                {
                    // Receive() metodu TCP baðlantýsý üzerinden gelecek mesajlarý beklemeye ve
                    // geldiðinde okumaya yarar.  gelenleri de gelen dataya atýyoruz
                    //mesaj gelmesse devamý çalýþmýyor theread
                    byte[] gelenData = new byte[256];
                    dinleyiciSoket.Receive(gelenData);
                    string mesaj = (Encoding.UTF8.GetString(gelenData)).Split('\0')[0];
                    //arreyin boþluk olan kýsýmlarýný silip mesaja atýyoruz
                    drawmessage(gelenData);
                }
                catch (Exception ex)
                {
                    MessageBox.Show("hata oldu" + ex);
                    break;
                }
            }
        }
        public void drawmessage(byte[] gelenData)
        {
            byte[] bytes = gelenData;
            int top = 0;
            for (int i = 0; i < bytes[2] - 1; i++)
            {
                top += bytes[i];
            }
            int crc = (top - bytes[2]) % 127;
            if (crc != 0)
            {
                byte[] buffer = new byte[bytes[2] - 4];
                String s = "";
                if (bytes[0] == 1)
                {
                    for (int i = 3; i < bytes[2] - 1; i++)
                    {
                        s += (char)bytes[i];
                    }
                }
                getmessage.Text += s + "\n";
            }
            else
            {
                MessageBox.Show("veride bozulma var");

            }

        }
        Thread connents;
        private void connentServer(object sender, EventArgs e)
        {
            Thread connent = new Thread(new ThreadStart(connentnetwork));
            connents = connent;
            Threadoparetion(true);
        }
        public void Threadoparetion(bool islem) {
            if (islem)
            {
                connents.Start();
            }
            else {
                connents.Abort();

            }
        }
        private bool Kapatsorgu;
        DialogResult dr = DialogResult.No;
        private void Menu_FormClosing(object sender, FormClosingEventArgs e)
        {
            if (!Kapatsorgu) // ! False ise 
            {
                dr = MessageBox.Show("Çýkmak istediðinize emin misiniz?", "Onay", MessageBoxButtons.YesNo, MessageBoxIcon.Question);
                Kapatsorgu = dr == DialogResult.Yes;
            }
            if (dr == DialogResult.Yes)
            {
                if (Kapatsorgu) // True ise
                {
                    Threadoparetion(false);
                    Application.Exit();
                }
                Kapatsorgu = false;
            }
            else
            {
                e.Cancel = true;
            }
        }

    }
}






//********************************FRONTENT*********************************************//

namespace tcpclient
{
    partial class Form1
    {
        /// <summary>
        ///Gerekli tasarýmcý deðiþkeni.
        /// </summary>
        private System.ComponentModel.IContainer components = null;

        /// <summary>
        ///Kullanýlan tüm kaynaklarý temizleyin.
        /// </summary>
        ///<param name="disposing">yönetilen kaynaklar dispose edilmeliyse doðru; aksi halde yanlýþ.</param>
        protected override void Dispose(bool disposing)
        {
            if (disposing && (components != null))
            {
                components.Dispose();
            }
            base.Dispose(disposing);
        }

        #region Windows Form Designer üretilen kod

        /// <summary>
        /// Tasarýmcý desteði için gerekli metot - bu metodun 
        ///içeriðini kod düzenleyici ile deðiþtirmeyin.
        /// </summary>
        private void InitializeComponent()
        {
            this.massegebox = new System.Windows.Forms.RichTextBox();
            this.sendmassage = new System.Windows.Forms.Button();
            this.label1 = new System.Windows.Forms.Label();
            this.getmessage = new System.Windows.Forms.RichTextBox();
            this.serverip = new System.Windows.Forms.TextBox();
            this.label2 = new System.Windows.Forms.Label();
            this.serverport = new System.Windows.Forms.TextBox();
            this.clientip = new System.Windows.Forms.TextBox();
            this.clientport = new System.Windows.Forms.TextBox();
            this.clientname = new System.Windows.Forms.TextBox();
            this.clientconnetn = new System.Windows.Forms.Button();
            this.serverconnent = new System.Windows.Forms.Button();
            this.SuspendLayout();
            // 
            // massegebox
            // 
            this.massegebox.Location = new System.Drawing.Point(15, 354);
            this.massegebox.Name = "massegebox";
            this.massegebox.Size = new System.Drawing.Size(292, 41);
            this.massegebox.TabIndex = 0;
            this.massegebox.Text = "";
            // 
            // sendmassage
            // 
            this.sendmassage.Location = new System.Drawing.Point(313, 354);
            this.sendmassage.Name = "sendmassage";
            this.sendmassage.Size = new System.Drawing.Size(119, 41);
            this.sendmassage.TabIndex = 1;
            this.sendmassage.Text = "gonder";
            this.sendmassage.UseVisualStyleBackColor = true;
            this.sendmassage.Click += new System.EventHandler(this.button1_Click);
            // 
            // label1
            // 
            this.label1.AutoSize = true;
            this.label1.Location = new System.Drawing.Point(12, 9);
            this.label1.Name = "label1";
            this.label1.Size = new System.Drawing.Size(91, 17);
            this.label1.TabIndex = 2;
            this.label1.Text = "server ayrlarý";
            this.label1.Visible = false;
            // 
            // getmessage
            // 
            this.getmessage.Location = new System.Drawing.Point(15, 143);
            this.getmessage.Name = "getmessage";
            this.getmessage.ReadOnly = true;
            this.getmessage.Size = new System.Drawing.Size(417, 182);
            this.getmessage.TabIndex = 3;
            this.getmessage.Text = "";
            // 
            // serverip
            // 
            this.serverip.Location = new System.Drawing.Point(15, 29);
            this.serverip.Name = "serverip";
            this.serverip.Size = new System.Drawing.Size(100, 22);
            this.serverip.TabIndex = 4;
            this.serverip.Text = "127.0.0.1";
            // 
            // label2
            // 
            this.label2.AutoSize = true;
            this.label2.Location = new System.Drawing.Point(12, 80);
            this.label2.Name = "label2";
            this.label2.Size = new System.Drawing.Size(92, 17);
            this.label2.TabIndex = 5;
            this.label2.Text = "client ayarlari";
            this.label2.Visible = false;
            // 
            // serverport
            // 
            this.serverport.Location = new System.Drawing.Point(121, 29);
            this.serverport.Name = "serverport";
            this.serverport.Size = new System.Drawing.Size(100, 22);
            this.serverport.TabIndex = 7;
            this.serverport.Text = "9998";
            // 
            // clientip
            // 
            this.clientip.Location = new System.Drawing.Point(121, 100);
            this.clientip.Name = "clientip";
            this.clientip.Size = new System.Drawing.Size(100, 22);
            this.clientip.TabIndex = 8;
            this.clientip.Text = "127.0.0.1";
            // 
            // clientport
            // 
            this.clientport.Location = new System.Drawing.Point(227, 100);
            this.clientport.Name = "clientport";
            this.clientport.Size = new System.Drawing.Size(100, 22);
            this.clientport.TabIndex = 9;
            this.clientport.Tag = "";
            this.clientport.Text = "9999";
            // 
            // clientname
            // 
            this.clientname.Location = new System.Drawing.Point(15, 100);
            this.clientname.Name = "clientname";
            this.clientname.Size = new System.Drawing.Size(100, 22);
            this.clientname.TabIndex = 10;
            this.clientname.Text = "adiniz?";
            // 
            // clientconnetn
            // 
            this.clientconnetn.Location = new System.Drawing.Point(333, 92);
            this.clientconnetn.Name = "clientconnetn";
            this.clientconnetn.Size = new System.Drawing.Size(99, 39);
            this.clientconnetn.TabIndex = 11;
            this.clientconnetn.Text = "baglan";
            this.clientconnetn.UseVisualStyleBackColor = true;
            this.clientconnetn.Click += new System.EventHandler(this.clientconnent);
            // 
            // serverconnent
            // 
            this.serverconnent.Location = new System.Drawing.Point(227, 21);
            this.serverconnent.Name = "serverconnent";
            this.serverconnent.Size = new System.Drawing.Size(205, 39);
            this.serverconnent.TabIndex = 12;
            this.serverconnent.Text = "servere baðlan";
            this.serverconnent.UseVisualStyleBackColor = true;
            this.serverconnent.Click += new System.EventHandler(this.connentServer);
            // 
            // Form1
            // 
            this.AutoScaleDimensions = new System.Drawing.SizeF(8F, 16F);
            this.AutoScaleMode = System.Windows.Forms.AutoScaleMode.Font;
            this.ClientSize = new System.Drawing.Size(452, 420);
            this.Controls.Add(this.serverconnent);
            this.Controls.Add(this.clientconnetn);
            this.Controls.Add(this.clientname);
            this.Controls.Add(this.clientport);
            this.Controls.Add(this.clientip);
            this.Controls.Add(this.serverport);
            this.Controls.Add(this.label2);
            this.Controls.Add(this.serverip);
            this.Controls.Add(this.getmessage);
            this.Controls.Add(this.label1);
            this.Controls.Add(this.sendmassage);
            this.Controls.Add(this.massegebox);
            this.Name = "Form1";
            this.Text = "Form1";
            this.FormClosing += new System.Windows.Forms.FormClosingEventHandler(this.Menu_FormClosing);
            this.ResumeLayout(false);
            this.PerformLayout();

        }

        #endregion

        private System.Windows.Forms.RichTextBox massegebox;
        private System.Windows.Forms.Button sendmassage;
        private System.Windows.Forms.Label label1;
        private System.Windows.Forms.RichTextBox getmessage;
        private System.Windows.Forms.TextBox serverip;
        private System.Windows.Forms.Label label2;
        private System.Windows.Forms.TextBox serverport;
        private System.Windows.Forms.TextBox clientip;
        private System.Windows.Forms.TextBox clientport;
        private System.Windows.Forms.TextBox clientname;
        private System.Windows.Forms.Button clientconnetn;
        private System.Windows.Forms.Button serverconnent;
    }
}


